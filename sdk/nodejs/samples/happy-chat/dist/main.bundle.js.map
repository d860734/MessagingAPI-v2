{"version":3,"sources":["C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src async","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/app.component.html","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/app.component.scss","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/app.component.ts","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/app.module.ts","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/app.routing.ts","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/demo/chat-box/chat-box.component.html","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/demo/chat-box/chat-box.component.scss","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/demo/chat-box/chat-box.component.ts","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/demo/demo.component.html","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/demo/demo.component.scss","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/demo/demo.component.ts","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/demo/demo.module.ts","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/demo/demo.service.ts","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/error/error.component.html","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/error/error.component.scss","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/error/error.component.ts","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/error/error.model.ts","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/error/error.module.ts","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/error/error.service.ts","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/models/chatter.model.ts","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/models/message-status.model.ts","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/models/message.model.ts","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/models/sms.model.ts","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/environments/environment.ts","C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"col-md-8 offset-md-4\\\">\\r\\n        <h1>Happy Chat 😄</h1>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\\r\\n<app-error></app-error>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Anyong Haesayo!!!';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/app.component.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpModule } from '@angular/http';\n\nimport { routing } from './app.routing';\nimport { AppComponent } from './app.component';\n\nimport { DemoModule } from './demo/demo.module';\nimport { ErrorModule } from './error/error.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpModule,\n    DemoModule,\n    ErrorModule,\n    routing\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/app.module.ts","import { Routes, RouterModule } from '@angular/router';\nimport { DemoComponent } from './demo/demo.component';\n\nconst APP_ROUTES: Routes = [\n    { path: '', redirectTo: 'demo', pathMatch: 'full' },\n    { path: 'demo', component: DemoComponent },\n    { path: '*', redirectTo: 'demo' }\n]\n\nexport const routing = RouterModule.forRoot(APP_ROUTES);\n\n\n// WEBPACK FOOTER //\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/app.routing.ts","module.exports = \"<ng-container *ngFor=\\\"let message of messages; let i = index;\\\">\\r\\n  <div class=\\\"card card-outline-warning\\\" [@flyIn]>\\r\\n    <div class=\\\"card-block\\\">\\r\\n      <h6 class=\\\"card-title\\\">{{ message?.chatter.name }} says...</h6>\\r\\n      <p class=\\\"card-text\\\">{{ message?.message }}</p>\\r\\n      <br>\\r\\n      <div class=\\\"pull-right text-muted\\\">\\r\\n        at {{ message?.sentTimestamp | date: \\t'dd/MM/yyyy hh:mm:ss' }}\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-container>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/demo/chat-box/chat-box.component.html\n// module id = ../../../../../src/app/demo/chat-box/chat-box.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".card {\\n  margin: 1em; }\\n\\nimg {\\n  height: 10%;\\n  width: 10%; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/demo/chat-box/chat-box.component.scss\n// module id = ../../../../../src/app/demo/chat-box/chat-box.component.scss\n// module chunks = 1","import { Component, Input } from '@angular/core';\r\nimport { Message } from '../../models/message.model';\r\nimport { trigger, state, transition, style, animate } from '@angular/animations'\r\nimport { Chatter } from \"app/models/chatter.model\";\r\n\r\n@Component({\r\n  selector: 'app-chat-box',\r\n  templateUrl: './chat-box.component.html',\r\n  styleUrls: ['./chat-box.component.scss'],\r\n  animations: [\r\n    trigger('flyIn', [\r\n      state('in', style({ transform: 'translateX(0)' })),\r\n      transition('void => *', [\r\n        style({ transform: 'translateX(100%)' }),\r\n        animate(150)\r\n      ])\r\n    ])\r\n  ]\r\n})\r\n\r\nexport class ChatBoxComponent {\r\n  @Input() messages: Message[];\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/demo/chat-box/chat-box.component.ts","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <div class=\\\"card card-outline-primary\\\">\\n      <div class=\\\"card-block\\\">\\n        <h3 class=\\\"card-title\\\">Send SMS</h3>\\n        <form [formGroup]=\\\"smsForm\\\">\\n          <div formArrayName=\\\"to\\\">\\n            <ng-container *ngFor=\\\"let number of smsForm.get('to')['controls']; let i = index\\\">\\n              <label>Recipient {{ i + 1 }}</label>\\n              <div [formGroupName]=\\\"i\\\" class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"number\\\" placeholder=\\\"Phone Number\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" placeholder=\\\"Name\\\">\\n                <span class=\\\"input-group-btn\\\">\\n                  <button *ngIf=\\\"smsForm.get('to')['controls'].length > 1\\\" \\n                    class=\\\"btn btn-danger\\\" (click)=\\\"removeTo(i)\\\"><i class=\\\"fa fa-times\\\"></i>\\n                  </button>\\n                </span>\\n              </div>\\n              <ng-container *ngIf=\\\"sentMessages.length > 0\\\">\\n                <span [ngSwitch]=\\\"getMessageStatus(smsForm.get('to')['controls'][i]['controls']['number'].value)\\\">\\n                  <div *ngSwitchCase=\\\"'DELIVRD'\\\">\\n                    <span class=\\\"text-success\\\"><i class=\\\"fa fa-check-circle\\\"></i> Sent!</span>\\n                  </div>\\n                  <div *ngSwitchCase=\\\"'DeliveryImpossible'\\\">\\n                    <span class=\\\"text-danger\\\"><i class=\\\"fa fa-times-circle\\\"></i> Failed! Delivery impossible</span>\\n                  </div>\\n                  <div *ngSwitchCase=\\\"'MessageWaiting'\\\">\\n                    <span class=\\\"text-warning\\\"><i class=\\\"fa fa-spinner fa-spin fa-fw\\\"></i> Pending...</span>\\n                  </div>\\n                </span>\\n              </ng-container>\\n              <div *ngIf=\\\"!smsForm.valid\\\" class=\\\"container\\\">\\n                <div class=\\\"row\\\">\\n                  <div *ngIf=\\\"smsForm.get('to')['controls'][i].get('number').hasError('required')\\n                        && smsForm.get('to')['controls'][i].get('number').touched\\\" class=\\\"col alert alert-danger form-error\\\" style=\\\"margin-right: 1em\\\">\\n                        Number required\\n                  </div>\\n                  <div *ngIf=\\\"smsForm.get('to')['controls'][i].get('name').hasError('required')\\n                        && smsForm.get('to')['controls'][i].get('name').touched\\\" class=\\\"col alert alert-danger form-error\\\">\\n                        Name required\\n                  </div>\\n                </div>\\n              </div>\\n              <br>\\n            </ng-container>\\n            <button class=\\\"btn btn-outline-success btn-sm\\\" style=\\\"margin-bottom: 1em\\\" (click)=\\\"addTo()\\\">Add Recipient</button>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"message\\\">Message</label>\\n            <textarea rows=\\\"5\\\" class=\\\"form-control\\\" formControlName=\\\"message\\\"></textarea>\\n            <div *ngIf=\\\"smsForm.get('message').hasError('required')\\n                        && smsForm.get('message').touched\\\" class=\\\"alert alert-danger form-error\\\">\\n              Message required\\n            </div>\\n          </div>\\n          <button class=\\\"btn btn-outline-primary col-md-2\\\" [disabled]=\\\"!smsForm.valid\\\" (click)=\\\"onSend()\\\">\\n            <i *ngIf=\\\"messageWaiting\\\" class=\\\"fa fa-refresh fa-spin fa-fw\\\"></i>\\n            {{ messageWaiting ? '' : 'Send' }}\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n    <p><span [ngClass]=\\\"{'spin-forwards': userConnected, 'spin-backwards': userDisconnected }\\\">😄</span>\\n      &nbsp;{{ connections }} chatter{{ connections > 1 ? 's' : '' }} chatting\\n    </p>\\n  </div>\\n  <div class=\\\"col-md-4 chat-container\\\">\\n    <app-chat-box [messages]=\\\"messages\\\"></app-chat-box>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/demo/demo.component.html\n// module id = ../../../../../src/app/demo/demo.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".card {\\n  height: 65vh;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  overflow: auto; }\\n\\n.chat-container {\\n  height: 65vh;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  overflow-y: auto;\\n  overflow-x: hidden; }\\n\\n.navbar {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  height: 15vh; }\\n\\n.navbar > div > p {\\n  margin-left: 2em; }\\n\\n.card-outline-warning > div > h3 {\\n  color: #ffbb33; }\\n  .card-outline-warning > div > h3 i {\\n    cursor: pointer; }\\n\\n.fa-check-circle {\\n  color: #5cb85c; }\\n\\n.fa-times-circle {\\n  color: #d9534f; }\\n\\n#failed-text {\\n  color: #d9534f; }\\n\\n#sent-text {\\n  color: #5cb85c; }\\n\\n.spin-forwards {\\n  display: inline-block;\\n  -webkit-animation: spin-forwards 0.3s linear;\\n  animation: spin-forwards 0.3s linear; }\\n\\n.spin-backwards {\\n  display: inline-block;\\n  -webkit-animation: spin-backwards 0.3s linear;\\n  animation: spin-backwards 0.3s linear; }\\n\\n@-webkit-keyframes spin-forwards {\\n  0% {\\n    -webkit-transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg); } }\\n\\n@keyframes spin-forwards {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg); } }\\n\\n@-webkit-keyframes spin-backwards {\\n  0% {\\n    -webkit-transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(-360deg); } }\\n\\n@keyframes spin-backwards {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(-360deg);\\n    transform: rotate(-360deg); } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/demo/demo.component.scss\n// module id = ../../../../../src/app/demo/demo.component.scss\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, FormBuilder, FormArray } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from \"rxjs/Subscription\";\nimport 'rxjs/add/observable/timer'\nimport 'rxjs/add/operator/map'\nimport 'rxjs/add/operator/take'\n\nimport { DemoService } from './demo.service';\nimport { SMS } from '../models/sms.model';\nimport { Chatter } from '../models/chatter.model';\nimport { MessageSentResponse } from '../models/message-sent-response.model';\nimport { MessageReceivedResponse } from '../models/message-received-response.model';\nimport { MessageStatus } from '../models/message-status.model';\nimport { Message } from \"app/models/message.model\";\n\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.scss']\n})\nexport class DemoComponent implements OnInit {\n\n  // replace these with your own notifyURL and provisioned phone number\n  private myNotifyURL = `your notify URL here`;\n  private myNumber = `your provisioned phone number here`\n\n  connections = 0;\n  userConnected = true;\n  userDisconnected = false;\n\n  smsForm: FormGroup;\n  messages: Message[] = [];\n  sentMessages: MessageStatus[] = [];\n\n  messageWaiting: Subscription;\n\n  chatters: Chatter[] = [];\n\n  constructor(private demoService: DemoService, private fb: FormBuilder) { }\n\n  // Australian numbers dont have to be in international format for the messaging API to send them a message, but the API will\n  // return the number in the message status and message receieved callbacks in international format. Since we use the number to\n  // identify our chatters we convert any phone numbers starting with a 0 to international format before assigning it to a chatter\n  convertToInternationalFormat(phoneNumber: string) {\n    phoneNumber = phoneNumber.replace(phoneNumber[0], '+61');\n    return phoneNumber;\n  }\n\n  // send an SMS\n  onSend() {\n    // double check if the form is valid\n    if (this.smsForm.valid) {\n      this.sentMessages = [];\n      let numbers: string[] = [];\n\n      // create our array of phone numbers and set up our chatter\n      this.smsForm.get('to').value.forEach((to: any) => {\n        if (to.number[0] === '0') {\n          to.number = this.convertToInternationalFormat(to.number);\n        }\n        numbers.push(to.number);\n        if (!this.chatters.find(chatter => chatter.number === to.number)) {\n          this.chatters.push(new Chatter(\n            to.name,\n            to.number\n          ));\n        }\n      });\n      // create the SMS object to send to the messaging API\n      const sms = new SMS(\n        numbers,\n        this.myNumber,\n        '60',\n        false,\n        this.myNotifyURL,\n        false,\n        this.smsForm.get('message').value\n      );\n      // Send the SMS via the demoService. We will get a MessageSentResponse back\n      this.messageWaiting = this.demoService.sendSMS(sms).subscribe((response: MessageSentResponse) => {\n        this.messageWaiting.unsubscribe();\n\n        // add all messages from the response to our sentMessages array.\n        response.messages.forEach(message => {\n          // here we remove everything after the first hyphen in the messageId. This is because the message status returns this same\n          // id but with a / instead of a hyphen. Thats ok though, because everything after these symbols is just the phone number,\n          // everything before these symbols is the actual message id\n          message.messageId = message.messageId.substr(0, message.messageId.indexOf('-'));\n          // push the MessageStatus to our sentMessages array. We will update this as the status of the message in the UI\n          this.sentMessages.push(new MessageStatus(\n            message.to,\n            message.messageId,\n            message.deliveryStatus\n          ));\n        });\n      },\n        error => this.messageWaiting = null);\n    } else {\n      this.smsForm.markAsDirty();\n    }\n  }\n\n  // gets the message status. Because of the way the app is set up we use the phone number and find it in our sentMessages array.\n  // A much better implementation of getting the message status would be to use the messageId\n  getMessageStatus(phoneNumber: string) {\n    let result = null;\n    if (phoneNumber) {\n      phoneNumber = this.convertToInternationalFormat(phoneNumber);\n      if (this.sentMessages.find(message => message.to === phoneNumber)) {\n        result = this.sentMessages.find(message => message.to === phoneNumber).deliveryStatus;\n      }\n    }\n    return result;\n  }\n\n  // sets up the form, and also is a quick and easy way of resetting form arrays\n  bindForm() {\n    this.smsForm = this.fb.group({\n      to: this.fb.array([]),\n      message: new FormControl('', Validators.required)\n    });\n  }\n\n  // initialises the form controls in the 'to' form field when the user clicks the add recipient button\n  initNumber() {\n    return this.fb.group({\n      number: new FormControl('', Validators.required),\n      name: new FormControl('', Validators.required)\n    });\n  }\n\n  // add a 'to' form field\n  addTo() {\n    const control = <FormArray>this.smsForm.get('to');\n    control.push(this.initNumber());\n  }\n\n  // rmeove a 'to' form field\n  removeTo(i: number) {\n    const control = <FormArray>this.smsForm.get('to');\n    control.removeAt(i);\n  }\n\n  // for the current connected users display.\n  setConnected(connected: boolean, disconnected: boolean) {\n    this.userConnected = connected;\n    this.userDisconnected = disconnected;\n  }\n\n  ngOnInit() {\n    // subscribe to the getMessageStatus function in the service. This function uses socket.io to listen for message status events\n    // from the API\n    this.demoService.getMessageStatus().subscribe((response: MessageStatus) => {\n      response.messageId = response.messageId.substr(0, response.messageId.indexOf('/'));\n      let sentMessageIndex = this.sentMessages.findIndex(message => message.messageId === response.messageId);\n      if (sentMessageIndex !== -1) {\n        this.sentMessages[sentMessageIndex] = response;\n      }\n    });\n\n    // subscrive to the get<essages function in the service. This function uses socket.io to listen for message received events\n    // from the API\n    this.demoService.getMessages().subscribe((response: MessageReceivedResponse) => {\n      let chatter = this.chatters.find(chatter => chatter.number === response.from);\n      if (!chatter) {\n        chatter = new Chatter(\n          'Happy chatter',\n          response.from\n        );\n      }\n      this.messages.unshift(new Message(\n        chatter,\n        response.body,\n        response.sentTimestamp,\n        response.messageId\n      ));\n    });\n\n    // get incoming connection messages via socket.io\n    this.demoService.getConnectedUsers().subscribe((connections: number) => {\n      if(this.connections === 0) { \n        this.connections = connections; \n      }\n      if(connections > this.connections) {\n        this.setConnected(true, false);\n      }\n      else if(connections < this.connections) {\n        this.setConnected(false, true);\n      }\n      this.connections = connections;\n      setTimeout(() => {\n        this.setConnected(false, false);\n      }, 300);\n    });\n\n    this.bindForm();\n    this.addTo();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/demo/demo.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { DemoComponent } from './demo.component';\nimport { DemoService } from './demo.service';\nimport { ChatBoxComponent } from './chat-box/chat-box.component';\n\n@NgModule({\n  declarations: [\n    DemoComponent,\n    ChatBoxComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [\n    DemoService\n  ],\n  exports: [\n    DemoComponent,\n    ChatBoxComponent\n  ]\n})\n\nexport class DemoModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/demo/demo.module.ts","import { Injectable } from '@angular/core'\r\nimport { routing } from './../app.routing';\r\nimport { Http, Headers, Response, RequestOptions, URLSearchParams } from '@angular/http';\r\nimport { Router } from '@angular/router';\r\nimport * as io from 'socket.io-client';\r\nimport 'rxjs/Rx';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ErrorService } from '../error/error.service';\r\nimport { SMS } from '../models/sms.model';\r\nimport { MessageSentResponse } from '../models/message-sent-response.model';\r\nimport { MessageStatus } from '../models/message-status.model';\r\nimport { Message } from \"app/models/message.model\";\r\n\r\n@Injectable()\r\n\r\nexport class DemoService {\r\n\r\n  // web socket set up\r\n  private socket;\r\n  private hostURL = `http://${document.location.host}`;\r\n\r\n  constructor(private http: Http, private router: Router, private errorService: ErrorService) {\r\n    this.socket = io(this.hostURL);\r\n  }\r\n\r\n  // error handler\r\n  handleError(error: Response) {\r\n    this.errorService.handleError(error.json());\r\n    return Observable.throw(error.json());\r\n  }\r\n\r\n  // sends an SMS using the SDK and messaging API\r\n  sendSMS(sms: SMS): Observable<MessageSentResponse> {\r\n    const body = JSON.stringify(sms);\r\n    const headers = new Headers({ 'Content-Type': 'application/json', 'Accept': 'application/json' });\r\n\r\n    return this.http.post('/api/send', body, { headers: headers })\r\n      .map((response: Response) => {\r\n        return response.json().obj;\r\n      })\r\n      .catch((error: Response) => {\r\n        return this.handleError(error);\r\n      });\r\n  }\r\n\r\n  // listens via websockets for the message status callback event from the API. See the readme file for more information on\r\n  // how to set this up\r\n  getMessageStatus() {\r\n    let observable = new Observable(observer => {\r\n      this.socket.on('message_status', (data: MessageStatus) => {\r\n        observer.next(data);    \r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };  \r\n    })     \r\n    return observable;\r\n  }\r\n\r\n  // listens via websockets for the message received callback event from the API. See the readme file for more information on\r\n  // how to set this up\r\n  getMessages() {\r\n    let observable = new Observable(observer => {\r\n      this.socket.on('message_received', (data: Message) => {\r\n        observer.next(data);    \r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };  \r\n    })     \r\n    return observable;\r\n  }\r\n\r\n  // this has nothing to do with the messaging API. Uses socket.io to show the number of clients currently connected\r\n  getConnectedUsers() {\r\n    let observable = new Observable(observer => {\r\n      this.socket.on('user_connected', (data: number) => {\r\n        observer.next(data);\r\n      });\r\n      this.socket.on('user_disconnected', (data: number) => {\r\n        observer.next(data);\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    })\r\n    return observable;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/demo/demo.service.ts","module.exports = \"<div class=\\\"backdrop\\\" [ngStyle]=\\\"{'display': display}\\\"></div>\\r\\n<div class=\\\"modal fade show\\\" id=\\\"errorModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"errorModalLabel\\\" aria-hidden=\\\"true\\\" [ngStyle]=\\\"{'display': display}\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"errorModalLabel\\\">{{ error?.title }}</h5>\\r\\n        <i class=\\\"fa fa-times\\\" (click)=\\\"onErrorHandled()\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" aria-hidden=\\\"true\\\"></i>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        {{ error?.message }}\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onErrorHandled()\\\">OK</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/error/error.component.html\n// module id = ../../../../../src/app/error/error.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".backdrop {\\n  background-color: rgba(0, 0, 0, 0.6);\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100vh; }\\n\\nh5 {\\n  color: #e11e1e; }\\n\\n.fa-times {\\n  cursor: pointer;\\n  color: #e11e1e;\\n  font-size: 15px; }\\n\\n.fa-times:active {\\n  font-size: 20px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/error/error.component.scss\n// module id = ../../../../../src/app/error/error.component.scss\n// module chunks = 1","import { Component, ViewChild, OnInit } from '@angular/core';\r\n\r\nimport { ErrorService } from './error.service';\r\nimport { Error } from './error.model';\r\n\r\n@Component({\r\n    selector: 'app-error',\r\n    templateUrl: './error.component.html',\r\n    styleUrls: ['./error.component.scss']\r\n})\r\n\r\nexport class ErrorComponent implements OnInit {\r\n    error: Error;\r\n    display = 'none';\r\n\r\n    constructor(private errorService: ErrorService) {}\r\n\r\n    onErrorHandled() {\r\n        this.error = null;\r\n        this.display = 'none';\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.errorService.errorOccured\r\n            .subscribe(\r\n                (error: Error) => {\r\n                    this.error = error;\r\n                    this.display = 'block';\r\n                }\r\n            )\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/error/error.component.ts","export class Error {\r\n    constructor(public title:  string, public message: string) {}\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/error/error.model.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ErrorComponent } from './error.component';\r\nimport { ErrorService } from './error.service';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ErrorComponent\r\n    ],\r\n    imports:[\r\n        CommonModule\r\n    ],\r\n    providers: [\r\n        ErrorService\r\n    ],\r\n    exports: [\r\n        ErrorComponent\r\n    ]\r\n})\r\n\r\nexport class ErrorModule {}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/error/error.module.ts","import { EventEmitter} from '@angular/core';\r\nimport { Error } from './error.model';\r\n\r\n\r\nexport class ErrorService{\r\n\r\n    errorOccured = new EventEmitter<Error>();\r\n\r\n    handleError(error: any) {\r\n        const errorData = new Error(error.title, error.message);\r\n        this.errorOccured.emit(errorData);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/error/error.service.ts","export class Chatter {\r\n  constructor(public name: string, public number: string) {}\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/models/chatter.model.ts","// represents the message status response returned from the API\r\nexport class MessageStatus {\r\n  receivedTimestamp?: Date;\r\n  sentTimestamp?: Date;\r\n  to: string;\r\n  messageId: string;\r\n  deliveryStatus: string;\r\n\r\n  constructor(to: string, messageId: string, deliveryStatus: string, receivedTimestamp?: Date, sentTimestamp?: Date) {\r\n    this.to = to;\r\n    this.messageId = messageId;\r\n    this.deliveryStatus = deliveryStatus;\r\n    this.receivedTimestamp = receivedTimestamp;\r\n    this.sentTimestamp = sentTimestamp;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/models/message-status.model.ts","import { Chatter } from './chatter.model';\r\n\r\nexport class Message {\r\n  chatter: Chatter;\r\n  message: string;\r\n  sentTimestamp: Date;\r\n  messageId: string;\r\n\r\n  constructor(chatter: Chatter, message: string, sentTimestamp: Date, messageId: string) {\r\n    this.chatter = chatter;\r\n    this.message = message;\r\n    this.sentTimestamp = sentTimestamp;\r\n    this.messageId = messageId;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/models/message.model.ts","// represents what the API needs in order to send an SMS. MessageId is added here just for our app\r\nexport class SMS {\r\n    to: string[];\r\n    from: string;\r\n    validity: string;\r\n    priority:  boolean;\r\n    notifyURL: string;\r\n    replyRequest: boolean;\r\n    body: string;\r\n    messageId?: string;\r\n\r\n    constructor(to: string[], from: string, validity: string, priority: boolean, notifyURL: string, replyRequst: boolean, body: string, messageId?: string) {\r\n        this.to = to;\r\n        this.from = from;\r\n        this.validity = validity;\r\n        this.priority = priority;\r\n        this.notifyURL = notifyURL;\r\n        this.replyRequest = replyRequst;\r\n        this.body = body;\r\n        this.messageId = messageId;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/app/models/sms.model.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Marcus/Documents/API Enablement/SDK/npm/MessagingAPI-v2/sdk/nodejs/samples/happy-chat/src/main.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 0\n// module chunks = 1"],"sourceRoot":"webpack:///"}